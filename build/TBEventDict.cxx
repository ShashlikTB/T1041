//
// File generated by rootcint at Wed May 21 09:38:02 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME TBEventDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TBEventDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void PadeChannel_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PadeChannel(void *p = 0);
   static void *newArray_PadeChannel(Long_t size, void *p);
   static void delete_PadeChannel(void *p);
   static void deleteArray_PadeChannel(void *p);
   static void destruct_PadeChannel(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PadeChannel*)
   {
      ::PadeChannel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PadeChannel >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PadeChannel", ::PadeChannel::Class_Version(), "./include/TBEvent.h", 14,
                  typeid(::PadeChannel), DefineBehavior(ptr, ptr),
                  &::PadeChannel::Dictionary, isa_proxy, 4,
                  sizeof(::PadeChannel) );
      instance.SetNew(&new_PadeChannel);
      instance.SetNewArray(&newArray_PadeChannel);
      instance.SetDelete(&delete_PadeChannel);
      instance.SetDeleteArray(&deleteArray_PadeChannel);
      instance.SetDestructor(&destruct_PadeChannel);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PadeChannel*)
   {
      return GenerateInitInstanceLocal((::PadeChannel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PadeChannel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void PadeHeader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PadeHeader(void *p = 0);
   static void *newArray_PadeHeader(Long_t size, void *p);
   static void delete_PadeHeader(void *p);
   static void deleteArray_PadeHeader(void *p);
   static void destruct_PadeHeader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::PadeHeader*)
   {
      ::PadeHeader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PadeHeader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PadeHeader", ::PadeHeader::Class_Version(), "./include/TBEvent.h", 48,
                  typeid(::PadeHeader), DefineBehavior(ptr, ptr),
                  &::PadeHeader::Dictionary, isa_proxy, 4,
                  sizeof(::PadeHeader) );
      instance.SetNew(&new_PadeHeader);
      instance.SetNewArray(&newArray_PadeHeader);
      instance.SetDelete(&delete_PadeHeader);
      instance.SetDeleteArray(&deleteArray_PadeHeader);
      instance.SetDestructor(&destruct_PadeHeader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::PadeHeader*)
   {
      return GenerateInitInstanceLocal((::PadeHeader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PadeHeader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void WCChannel_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_WCChannel(void *p = 0);
   static void *newArray_WCChannel(Long_t size, void *p);
   static void delete_WCChannel(void *p);
   static void deleteArray_WCChannel(void *p);
   static void destruct_WCChannel(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::WCChannel*)
   {
      ::WCChannel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::WCChannel >(0);
      static ::ROOT::TGenericClassInfo 
         instance("WCChannel", ::WCChannel::Class_Version(), "./include/TBEvent.h", 72,
                  typeid(::WCChannel), DefineBehavior(ptr, ptr),
                  &::WCChannel::Dictionary, isa_proxy, 4,
                  sizeof(::WCChannel) );
      instance.SetNew(&new_WCChannel);
      instance.SetNewArray(&newArray_WCChannel);
      instance.SetDelete(&delete_WCChannel);
      instance.SetDeleteArray(&deleteArray_WCChannel);
      instance.SetDestructor(&destruct_WCChannel);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::WCChannel*)
   {
      return GenerateInitInstanceLocal((::WCChannel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::WCChannel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TBSpill_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TBSpill(void *p = 0);
   static void *newArray_TBSpill(Long_t size, void *p);
   static void delete_TBSpill(void *p);
   static void deleteArray_TBSpill(void *p);
   static void destruct_TBSpill(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TBSpill*)
   {
      ::TBSpill *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TBSpill >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TBSpill", ::TBSpill::Class_Version(), "./include/TBEvent.h", 93,
                  typeid(::TBSpill), DefineBehavior(ptr, ptr),
                  &::TBSpill::Dictionary, isa_proxy, 4,
                  sizeof(::TBSpill) );
      instance.SetNew(&new_TBSpill);
      instance.SetNewArray(&newArray_TBSpill);
      instance.SetDelete(&delete_TBSpill);
      instance.SetDeleteArray(&deleteArray_TBSpill);
      instance.SetDestructor(&destruct_TBSpill);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TBSpill*)
   {
      return GenerateInitInstanceLocal((::TBSpill*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TBSpill*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TBEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TBEvent(void *p = 0);
   static void *newArray_TBEvent(Long_t size, void *p);
   static void delete_TBEvent(void *p);
   static void deleteArray_TBEvent(void *p);
   static void destruct_TBEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TBEvent*)
   {
      ::TBEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TBEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TBEvent", ::TBEvent::Class_Version(), "./include/TBEvent.h", 120,
                  typeid(::TBEvent), DefineBehavior(ptr, ptr),
                  &::TBEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TBEvent) );
      instance.SetNew(&new_TBEvent);
      instance.SetNewArray(&newArray_TBEvent);
      instance.SetDelete(&delete_TBEvent);
      instance.SetDeleteArray(&deleteArray_TBEvent);
      instance.SetDestructor(&destruct_TBEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TBEvent*)
   {
      return GenerateInitInstanceLocal((::TBEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TBEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *PadeChannel::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *PadeChannel::Class_Name()
{
   return "PadeChannel";
}

//______________________________________________________________________________
const char *PadeChannel::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PadeChannel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PadeChannel::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PadeChannel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PadeChannel::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PadeChannel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PadeChannel::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PadeChannel*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *PadeHeader::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *PadeHeader::Class_Name()
{
   return "PadeHeader";
}

//______________________________________________________________________________
const char *PadeHeader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PadeHeader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PadeHeader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::PadeHeader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PadeHeader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PadeHeader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PadeHeader::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::PadeHeader*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *WCChannel::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *WCChannel::Class_Name()
{
   return "WCChannel";
}

//______________________________________________________________________________
const char *WCChannel::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCChannel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WCChannel::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::WCChannel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WCChannel::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCChannel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WCChannel::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::WCChannel*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TBSpill::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TBSpill::Class_Name()
{
   return "TBSpill";
}

//______________________________________________________________________________
const char *TBSpill::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TBSpill*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBSpill::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TBSpill*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBSpill::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TBSpill*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBSpill::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TBSpill*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TBEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TBEvent::Class_Name()
{
   return "TBEvent";
}

//______________________________________________________________________________
const char *TBEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TBEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TBEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TBEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TBEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TBEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TBEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TBEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void PadeChannel::Streamer(TBuffer &R__b)
{
   // Stream an object of class PadeChannel.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PadeChannel::Class(),this);
   } else {
      R__b.WriteClassBuffer(PadeChannel::Class(),this);
   }
}

//______________________________________________________________________________
void PadeChannel::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PadeChannel.
      TClass *R__cl = ::PadeChannel::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ts", &_ts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_transfer_size", &_transfer_size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_board_id", &_board_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_hw_counter", &_hw_counter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ch_number", &_ch_number);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_eventnum", &_eventnum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_wform[120]", _wform);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_max", &_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_peak", &_peak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_flag", &_flag);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_PadeChannel(void *p) {
      return  p ? new(p) ::PadeChannel : new ::PadeChannel;
   }
   static void *newArray_PadeChannel(Long_t nElements, void *p) {
      return p ? new(p) ::PadeChannel[nElements] : new ::PadeChannel[nElements];
   }
   // Wrapper around operator delete
   static void delete_PadeChannel(void *p) {
      delete ((::PadeChannel*)p);
   }
   static void deleteArray_PadeChannel(void *p) {
      delete [] ((::PadeChannel*)p);
   }
   static void destruct_PadeChannel(void *p) {
      typedef ::PadeChannel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PadeChannel

//______________________________________________________________________________
void PadeHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class PadeHeader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(PadeHeader::Class(),this);
   } else {
      R__b.WriteClassBuffer(PadeHeader::Class(),this);
   }
}

//______________________________________________________________________________
void PadeHeader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PadeHeader.
      TClass *R__cl = ::PadeHeader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_isMaster", &_isMaster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_boardID", &_boardID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_status", &_status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trgStatus", &_trgStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_events", &_events);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_memReg", &_memReg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_trigPtr", &_trigPtr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pTemp", &_pTemp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_sTemp", &_sTemp);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_PadeHeader(void *p) {
      return  p ? new(p) ::PadeHeader : new ::PadeHeader;
   }
   static void *newArray_PadeHeader(Long_t nElements, void *p) {
      return p ? new(p) ::PadeHeader[nElements] : new ::PadeHeader[nElements];
   }
   // Wrapper around operator delete
   static void delete_PadeHeader(void *p) {
      delete ((::PadeHeader*)p);
   }
   static void deleteArray_PadeHeader(void *p) {
      delete [] ((::PadeHeader*)p);
   }
   static void destruct_PadeHeader(void *p) {
      typedef ::PadeHeader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::PadeHeader

//______________________________________________________________________________
void WCChannel::Streamer(TBuffer &R__b)
{
   // Stream an object of class WCChannel.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(WCChannel::Class(),this);
   } else {
      R__b.WriteClassBuffer(WCChannel::Class(),this);
   }
}

//______________________________________________________________________________
void WCChannel::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class WCChannel.
      TClass *R__cl = ::WCChannel::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tdcNumber", &_tdcNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tdcWire", &_tdcWire);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_tdcCount", &_tdcCount);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_WCChannel(void *p) {
      return  p ? new(p) ::WCChannel : new ::WCChannel;
   }
   static void *newArray_WCChannel(Long_t nElements, void *p) {
      return p ? new(p) ::WCChannel[nElements] : new ::WCChannel[nElements];
   }
   // Wrapper around operator delete
   static void delete_WCChannel(void *p) {
      delete ((::WCChannel*)p);
   }
   static void deleteArray_WCChannel(void *p) {
      delete [] ((::WCChannel*)p);
   }
   static void destruct_WCChannel(void *p) {
      typedef ::WCChannel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::WCChannel

//______________________________________________________________________________
void TBEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TBEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TBEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TBEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TBEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TBEvent.
      TClass *R__cl = ::TBEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "padeChannel", (void*)&padeChannel);
      R__insp.InspectMember("vector<PadeChannel>", (void*)&padeChannel, "padeChannel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wc", (void*)&wc);
      R__insp.InspectMember("vector<WCChannel>", (void*)&wc, "wc.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TBEvent(void *p) {
      return  p ? new(p) ::TBEvent : new ::TBEvent;
   }
   static void *newArray_TBEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TBEvent[nElements] : new ::TBEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TBEvent(void *p) {
      delete ((::TBEvent*)p);
   }
   static void deleteArray_TBEvent(void *p) {
      delete [] ((::TBEvent*)p);
   }
   static void destruct_TBEvent(void *p) {
      typedef ::TBEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TBEvent

//______________________________________________________________________________
void TBSpill::Streamer(TBuffer &R__b)
{
   // Stream an object of class TBSpill.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TBSpill::Class(),this);
   } else {
      R__b.WriteClassBuffer(TBSpill::Class(),this);
   }
}

//______________________________________________________________________________
void TBSpill::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TBSpill.
      TClass *R__cl = ::TBSpill::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_spillNumber", &_spillNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_pcTime", &_pcTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nTrigWC", &_nTrigWC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_wcTime", &_wcTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_padeHeader", (void*)&_padeHeader);
      R__insp.InspectMember("vector<PadeHeader>", (void*)&_padeHeader, "_padeHeader.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TBSpill(void *p) {
      return  p ? new(p) ::TBSpill : new ::TBSpill;
   }
   static void *newArray_TBSpill(Long_t nElements, void *p) {
      return p ? new(p) ::TBSpill[nElements] : new ::TBSpill[nElements];
   }
   // Wrapper around operator delete
   static void delete_TBSpill(void *p) {
      delete ((::TBSpill*)p);
   }
   static void deleteArray_TBSpill(void *p) {
      delete [] ((::TBSpill*)p);
   }
   static void destruct_TBSpill(void *p) {
      typedef ::TBSpill current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TBSpill

namespace ROOT {
   void vectorlEPadeChannelgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPadeChannelgR_Dictionary();
   static void *new_vectorlEPadeChannelgR(void *p = 0);
   static void *newArray_vectorlEPadeChannelgR(Long_t size, void *p);
   static void delete_vectorlEPadeChannelgR(void *p);
   static void deleteArray_vectorlEPadeChannelgR(void *p);
   static void destruct_vectorlEPadeChannelgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<PadeChannel>*)
   {
      vector<PadeChannel> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<PadeChannel>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<PadeChannel>", -2, "prec_stl/vector", 49,
                  typeid(vector<PadeChannel>), DefineBehavior(ptr, ptr),
                  0, &vectorlEPadeChannelgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<PadeChannel>) );
      instance.SetNew(&new_vectorlEPadeChannelgR);
      instance.SetNewArray(&newArray_vectorlEPadeChannelgR);
      instance.SetDelete(&delete_vectorlEPadeChannelgR);
      instance.SetDeleteArray(&deleteArray_vectorlEPadeChannelgR);
      instance.SetDestructor(&destruct_vectorlEPadeChannelgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<PadeChannel> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<PadeChannel>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPadeChannelgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<PadeChannel>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEPadeChannelgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<PadeChannel> : new vector<PadeChannel>;
   }
   static void *newArray_vectorlEPadeChannelgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<PadeChannel>[nElements] : new vector<PadeChannel>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPadeChannelgR(void *p) {
      delete ((vector<PadeChannel>*)p);
   }
   static void deleteArray_vectorlEPadeChannelgR(void *p) {
      delete [] ((vector<PadeChannel>*)p);
   }
   static void destruct_vectorlEPadeChannelgR(void *p) {
      typedef vector<PadeChannel> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<PadeChannel>

namespace ROOT {
   void vectorlEPadeHeadergR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEPadeHeadergR_Dictionary();
   static void *new_vectorlEPadeHeadergR(void *p = 0);
   static void *newArray_vectorlEPadeHeadergR(Long_t size, void *p);
   static void delete_vectorlEPadeHeadergR(void *p);
   static void deleteArray_vectorlEPadeHeadergR(void *p);
   static void destruct_vectorlEPadeHeadergR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<PadeHeader>*)
   {
      vector<PadeHeader> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<PadeHeader>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<PadeHeader>", -2, "prec_stl/vector", 49,
                  typeid(vector<PadeHeader>), DefineBehavior(ptr, ptr),
                  0, &vectorlEPadeHeadergR_Dictionary, isa_proxy, 0,
                  sizeof(vector<PadeHeader>) );
      instance.SetNew(&new_vectorlEPadeHeadergR);
      instance.SetNewArray(&newArray_vectorlEPadeHeadergR);
      instance.SetDelete(&delete_vectorlEPadeHeadergR);
      instance.SetDeleteArray(&deleteArray_vectorlEPadeHeadergR);
      instance.SetDestructor(&destruct_vectorlEPadeHeadergR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<PadeHeader> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<PadeHeader>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEPadeHeadergR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<PadeHeader>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEPadeHeadergR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<PadeHeader> : new vector<PadeHeader>;
   }
   static void *newArray_vectorlEPadeHeadergR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<PadeHeader>[nElements] : new vector<PadeHeader>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEPadeHeadergR(void *p) {
      delete ((vector<PadeHeader>*)p);
   }
   static void deleteArray_vectorlEPadeHeadergR(void *p) {
      delete [] ((vector<PadeHeader>*)p);
   }
   static void destruct_vectorlEPadeHeadergR(void *p) {
      typedef vector<PadeHeader> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<PadeHeader>

namespace ROOT {
   void vectorlEWCChannelgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEWCChannelgR_Dictionary();
   static void *new_vectorlEWCChannelgR(void *p = 0);
   static void *newArray_vectorlEWCChannelgR(Long_t size, void *p);
   static void delete_vectorlEWCChannelgR(void *p);
   static void deleteArray_vectorlEWCChannelgR(void *p);
   static void destruct_vectorlEWCChannelgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<WCChannel>*)
   {
      vector<WCChannel> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<WCChannel>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<WCChannel>", -2, "prec_stl/vector", 49,
                  typeid(vector<WCChannel>), DefineBehavior(ptr, ptr),
                  0, &vectorlEWCChannelgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<WCChannel>) );
      instance.SetNew(&new_vectorlEWCChannelgR);
      instance.SetNewArray(&newArray_vectorlEWCChannelgR);
      instance.SetDelete(&delete_vectorlEWCChannelgR);
      instance.SetDeleteArray(&deleteArray_vectorlEWCChannelgR);
      instance.SetDestructor(&destruct_vectorlEWCChannelgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<WCChannel> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<WCChannel>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEWCChannelgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<WCChannel>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEWCChannelgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<WCChannel> : new vector<WCChannel>;
   }
   static void *newArray_vectorlEWCChannelgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<WCChannel>[nElements] : new vector<WCChannel>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEWCChannelgR(void *p) {
      delete ((vector<WCChannel>*)p);
   }
   static void deleteArray_vectorlEWCChannelgR(void *p) {
      delete [] ((vector<WCChannel>*)p);
   }
   static void destruct_vectorlEWCChannelgR(void *p) {
      typedef vector<WCChannel> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<WCChannel>

/********************************************************
* TBEventDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTBEventDict();

extern "C" void G__set_cpp_environmentTBEventDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/TBEvent.h");
  G__cpp_reset_tagtableTBEventDict();
}
#include <new>
extern "C" int G__cpp_dllrevTBEventDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* PadeChannel */
static int G__TBEventDict_460_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PadeChannel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PadeChannel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PadeChannel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PadeChannel::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PadeChannel*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PadeChannel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PadeChannel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PadeChannel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PadeChannel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PadeChannel*) G__getstructoffset())->Fill(
(ULong64_t) G__ULonglong(libp->para[0]), (UShort_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, (Int_t*) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PadeChannel*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((PadeChannel*) G__getstructoffset())->GetBoardID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((PadeChannel*) G__getstructoffset())->GetChannelNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((PadeChannel*) G__getstructoffset())->GetChannelID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 82, (long) ((PadeChannel*) G__getstructoffset())->GetWform());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((PadeChannel*) G__getstructoffset())->GetMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((PadeChannel*) G__getstructoffset())->GetPeak());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const PadeChannel*) G__getstructoffset())->__SAMPLES());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PadeChannel*) G__getstructoffset())->GetXYZ(*(float*) G__Floatref(&libp->para[0]), *(float*) G__Floatref(&libp->para[1])
, *(float*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((PadeChannel*) G__getstructoffset())->GetPedistal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_460_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PadeChannel*) G__getstructoffset())->GetHist((TH1F*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__TBEventDict_460_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PadeChannel *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PadeChannel[n];
     } else {
       p = new((void*) gvp) PadeChannel[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PadeChannel;
     } else {
       p = new((void*) gvp) PadeChannel;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TBEventDictLN_PadeChannel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TBEventDict_460_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PadeChannel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PadeChannel(*(PadeChannel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TBEventDictLN_PadeChannel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PadeChannel G__TPadeChannel;
static int G__TBEventDict_460_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PadeChannel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PadeChannel*) (soff+(sizeof(PadeChannel)*i)))->~G__TPadeChannel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PadeChannel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PadeChannel*) (soff))->~G__TPadeChannel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TBEventDict_460_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PadeChannel* dest = (PadeChannel*) G__getstructoffset();
   *dest = *(PadeChannel*) libp->para[0].ref;
   const PadeChannel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* PadeHeader */
static int G__TBEventDict_461_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PadeHeader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_461_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PadeHeader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_461_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PadeHeader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_461_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PadeHeader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_461_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PadeHeader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_461_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PadeHeader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_461_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PadeHeader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_461_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PadeHeader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_461_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PadeHeader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_461_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PadeHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PadeHeader[n];
     } else {
       p = new((void*) gvp) PadeHeader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PadeHeader;
     } else {
       p = new((void*) gvp) PadeHeader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TBEventDictLN_PadeHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_461_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PadeHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 9
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new PadeHeader(
(Bool_t) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (UShort_t) G__int(libp->para[3])
, (UShort_t) G__int(libp->para[4]), (UShort_t) G__int(libp->para[5])
, (UShort_t) G__int(libp->para[6]), (UShort_t) G__int(libp->para[7])
, (UShort_t) G__int(libp->para[8]));
   } else {
     p = new((void*) gvp) PadeHeader(
(Bool_t) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (UShort_t) G__int(libp->para[3])
, (UShort_t) G__int(libp->para[4]), (UShort_t) G__int(libp->para[5])
, (UShort_t) G__int(libp->para[6]), (UShort_t) G__int(libp->para[7])
, (UShort_t) G__int(libp->para[8]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TBEventDictLN_PadeHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TBEventDict_461_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PadeHeader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PadeHeader(*(PadeHeader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TBEventDictLN_PadeHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PadeHeader G__TPadeHeader;
static int G__TBEventDict_461_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PadeHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PadeHeader*) (soff+(sizeof(PadeHeader)*i)))->~G__TPadeHeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PadeHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PadeHeader*) (soff))->~G__TPadeHeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TBEventDict_461_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PadeHeader* dest = (PadeHeader*) G__getstructoffset();
   *dest = *(PadeHeader*) libp->para[0].ref;
   const PadeHeader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* WCChannel */
static int G__TBEventDict_462_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) WCChannel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_462_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCChannel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_462_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) WCChannel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_462_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      WCChannel::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_462_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((WCChannel*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_462_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCChannel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_462_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCChannel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_462_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) WCChannel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_462_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) WCChannel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_462_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCChannel* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCChannel[n];
     } else {
       p = new((void*) gvp) WCChannel[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new WCChannel;
     } else {
       p = new((void*) gvp) WCChannel;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TBEventDictLN_WCChannel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_462_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCChannel* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new WCChannel(
(UChar_t) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) WCChannel(
(UChar_t) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TBEventDictLN_WCChannel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_462_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const WCChannel*) G__getstructoffset())->GetTDCNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_462_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 98, (long) ((const WCChannel*) G__getstructoffset())->GetWire());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_462_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const WCChannel*) G__getstructoffset())->GetCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_462_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((WCChannel*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_462_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((WCChannel*) G__getstructoffset())->GetY());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TBEventDict_462_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   WCChannel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new WCChannel(*(WCChannel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TBEventDictLN_WCChannel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef WCChannel G__TWCChannel;
static int G__TBEventDict_462_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (WCChannel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((WCChannel*) (soff+(sizeof(WCChannel)*i)))->~G__TWCChannel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (WCChannel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((WCChannel*) (soff))->~G__TWCChannel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TBEventDict_462_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   WCChannel* dest = (WCChannel*) G__getstructoffset();
   *dest = *(WCChannel*) libp->para[0].ref;
   const WCChannel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TBSpill */
static int G__TBEventDict_463_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TBSpill::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TBSpill::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TBSpill::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TBSpill::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TBSpill*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TBSpill::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TBSpill::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TBSpill::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TBSpill::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TBSpill* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TBSpill(
(Int_t) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1])
, (Int_t) G__int(libp->para[2]), (ULong64_t) G__ULonglong(libp->para[3]));
     } else {
       p = new((void*) gvp) TBSpill(
(Int_t) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1])
, (Int_t) G__int(libp->para[2]), (ULong64_t) G__ULonglong(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TBSpill(
(Int_t) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TBSpill(
(Int_t) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TBSpill((Int_t) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
     } else {
       p = new((void*) gvp) TBSpill((Int_t) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TBSpill((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TBSpill((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TBSpill[n];
       } else {
         p = new((void*) gvp) TBSpill[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TBSpill;
       } else {
         p = new((void*) gvp) TBSpill;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TBEventDictLN_TBSpill));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TBSpill*) G__getstructoffset())->GetSpillNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((const TBSpill*) G__getstructoffset())->GetPCTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TBSpill*) G__getstructoffset())->GetnTigWC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letULonglong(result7, 109, (G__uint64) ((const TBSpill*) G__getstructoffset())->GetWCTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TBSpill*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TBSpill*) G__getstructoffset())->SetSpillData((Int_t) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1])
, (Int_t) G__int(libp->para[2]), (ULong64_t) G__ULonglong(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TBSpill*) G__getstructoffset())->SetSpillNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TBSpill*) G__getstructoffset())->SetPCTime((ULong64_t) G__ULonglong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TBSpill*) G__getstructoffset())->SetnTrigWC((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TBSpill*) G__getstructoffset())->SetWCTime((ULong64_t) G__ULonglong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_463_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TBSpill*) G__getstructoffset())->AddPade(*((PadeHeader*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TBEventDict_463_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TBSpill* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TBSpill(*(TBSpill*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TBEventDictLN_TBSpill));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TBSpill G__TTBSpill;
static int G__TBEventDict_463_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TBSpill*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TBSpill*) (soff+(sizeof(TBSpill)*i)))->~G__TTBSpill();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TBSpill*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TBSpill*) (soff))->~G__TTBSpill();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TBEventDict_463_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TBSpill* dest = (TBSpill*) G__getstructoffset();
   *dest = *(TBSpill*) libp->para[0].ref;
   const TBSpill& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TBEvent */
static int G__TBEventDict_468_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TBEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TBEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TBEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TBEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TBEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TBEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TBEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TBEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TBEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TBEvent*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TBEvent*) G__getstructoffset())->NPadeChan());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PadeChannel* pobj;
         const PadeChannel xobj = ((const TBEvent*) G__getstructoffset())->GetPadeChan((const int) G__int(libp->para[0]));
         pobj = new PadeChannel(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const PadeChannel* pobj;
         const PadeChannel xobj = ((const TBEvent*) G__getstructoffset())->GetLastPadeChan();
         pobj = new PadeChannel(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         WCChannel* pobj;
         WCChannel xobj = ((TBEvent*) G__getstructoffset())->GetWCChan((const int) G__int(libp->para[0]));
         pobj = new WCChannel(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TBEvent*) G__getstructoffset())->GetWCHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         const vector<WCChannel>* pobj;
         const vector<WCChannel> xobj = ((const TBEvent*) G__getstructoffset())->GetWChitsX((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Int_t*) G__int(libp->para[2]));
         pobj = new vector<WCChannel>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         const vector<WCChannel>* pobj;
         const vector<WCChannel> xobj = ((const TBEvent*) G__getstructoffset())->GetWChitsX((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
         pobj = new vector<WCChannel>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const vector<WCChannel>* pobj;
         const vector<WCChannel> xobj = ((const TBEvent*) G__getstructoffset())->GetWChitsX((Int_t) G__int(libp->para[0]));
         pobj = new vector<WCChannel>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         const vector<WCChannel>* pobj;
         const vector<WCChannel> xobj = ((const TBEvent*) G__getstructoffset())->GetWChitsY((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (Int_t*) G__int(libp->para[2]));
         pobj = new vector<WCChannel>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         const vector<WCChannel>* pobj;
         const vector<WCChannel> xobj = ((const TBEvent*) G__getstructoffset())->GetWChitsY((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
         pobj = new vector<WCChannel>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         const vector<WCChannel>* pobj;
         const vector<WCChannel> xobj = ((const TBEvent*) G__getstructoffset())->GetWChitsY((Int_t) G__int(libp->para[0]));
         pobj = new vector<WCChannel>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TBEvent*) G__getstructoffset())->SetPadeChannel(*((const PadeChannel*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TBEvent*) G__getstructoffset())->FillPadeChannel(
(ULong64_t) G__ULonglong(libp->para[0]), (UShort_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, (Int_t*) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TBEventDict_468_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TBEvent*) G__getstructoffset())->AddWCHit((UChar_t) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1])
, (UShort_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__TBEventDict_468_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TBEvent *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TBEvent[n];
     } else {
       p = new((void*) gvp) TBEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TBEvent;
     } else {
       p = new((void*) gvp) TBEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TBEventDictLN_TBEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TBEventDict_468_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TBEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TBEvent(*(TBEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TBEventDictLN_TBEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TBEvent G__TTBEvent;
static int G__TBEventDict_468_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TBEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TBEvent*) (soff+(sizeof(TBEvent)*i)))->~G__TTBEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TBEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TBEvent*) (soff))->~G__TTBEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TBEventDict_468_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TBEvent* dest = (TBEvent*) G__getstructoffset();
   *dest = *(TBEvent*) libp->para[0].ref;
   const TBEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* PadeChannel */

/* PadeHeader */

/* WCChannel */

/* TBSpill */

/* TBEvent */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTBEventDict {
 public:
  G__Sizep2memfuncTBEventDict(): p(&G__Sizep2memfuncTBEventDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTBEventDict::*p)();
};

size_t G__get_sizep2memfuncTBEventDict()
{
  G__Sizep2memfuncTBEventDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTBEventDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TBEventDictLN_PadeChannel))) {
     PadeChannel *G__Lderived;
     G__Lderived=(PadeChannel*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TBEventDictLN_PadeChannel),G__get_linked_tagnum(&G__TBEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TBEventDictLN_PadeHeader))) {
     PadeHeader *G__Lderived;
     G__Lderived=(PadeHeader*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TBEventDictLN_PadeHeader),G__get_linked_tagnum(&G__TBEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TBEventDictLN_WCChannel))) {
     WCChannel *G__Lderived;
     G__Lderived=(WCChannel*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TBEventDictLN_WCChannel),G__get_linked_tagnum(&G__TBEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TBEventDictLN_TBSpill))) {
     TBSpill *G__Lderived;
     G__Lderived=(TBSpill*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TBEventDictLN_TBSpill),G__get_linked_tagnum(&G__TBEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TBEventDictLN_TBEvent))) {
     TBEvent *G__Lderived;
     G__Lderived=(TBEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TBEventDictLN_TBEvent),G__get_linked_tagnum(&G__TBEventDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTBEventDict() {

   /* Setting up typedef entry */
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("ULong64_t",109,-1,0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TBEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TBEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TBEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TBEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TBEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TBEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TBEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TBEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TBEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TBEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TBEventDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TBEventDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__TBEventDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__TBEventDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PadeHeader>",117,G__get_linked_tagnum(&G__TBEventDictLN_vectorlEPadeHeadercOallocatorlEPadeHeadergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TBEventDictLN_reverse_iteratorlEvectorlEPadeHeadercOallocatorlEPadeHeadergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TBEventDictLN_vectorlEPadeHeadercOallocatorlEPadeHeadergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TBEventDictLN_reverse_iteratorlEvectorlEPadeHeadercOallocatorlEPadeHeadergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TBEventDictLN_vectorlEPadeHeadercOallocatorlEPadeHeadergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<WCChannel>",117,G__get_linked_tagnum(&G__TBEventDictLN_vectorlEWCChannelcOallocatorlEWCChannelgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TBEventDictLN_reverse_iteratorlEvectorlEWCChannelcOallocatorlEWCChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TBEventDictLN_vectorlEWCChannelcOallocatorlEWCChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TBEventDictLN_reverse_iteratorlEvectorlEWCChannelcOallocatorlEWCChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TBEventDictLN_vectorlEWCChannelcOallocatorlEWCChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PadeChannel>",117,G__get_linked_tagnum(&G__TBEventDictLN_vectorlEPadeChannelcOallocatorlEPadeChannelgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TBEventDictLN_reverse_iteratorlEvectorlEPadeChannelcOallocatorlEPadeChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TBEventDictLN_vectorlEPadeChannelcOallocatorlEPadeChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TBEventDictLN_reverse_iteratorlEvectorlEPadeChannelcOallocatorlEPadeChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TBEventDictLN_vectorlEPadeChannelcOallocatorlEPadeChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* PadeChannel */
static void G__setup_memvarPadeChannel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TBEventDictLN_PadeChannel));
   { PadeChannel *p; p=(PadeChannel*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TBEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_ts)-(long)(p)),109,0,0,-1,G__defined_typename("ULong64_t"),-1,1,"_ts=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_transfer_size)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"_transfer_size=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_board_id)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"_board_id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_hw_counter)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"_hw_counter=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_ch_number)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"_ch_number=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_eventnum)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"_eventnum=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_wform)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"_wform[120]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->_max)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"_max=",0,"max ADC sample");
   G__memvar_setup((void*)((long)(&p->_peak)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"_peak=",0,"sample number for peak");
   G__memvar_setup((void*)((long)(&p->_flag)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"_flag=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* PadeHeader */
static void G__setup_memvarPadeHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TBEventDictLN_PadeHeader));
   { PadeHeader *p; p=(PadeHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TBEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"_isMaster=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"_boardID=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"_status=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"_trgStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"_events=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"_memReg=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"_trigPtr=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"_pTemp=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"_sTemp=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* WCChannel */
static void G__setup_memvarWCChannel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TBEventDictLN_WCChannel));
   { WCChannel *p; p=(WCChannel*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TBEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"_tdcNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"_tdcWire=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"_tdcCount=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TBSpill */
static void G__setup_memvarTBSpill(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TBEventDictLN_TBSpill));
   { TBSpill *p; p=(TBSpill*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TBEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_spillNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"_pcTime=",0,"spill time stamp from PC");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_nTrigWC=",0,(char*)NULL);
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,4,"_wcTime=",0,"WC time read by PADE PC  ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TBEventDictLN_vectorlEPadeHeadercOallocatorlEPadeHeadergRsPgR),G__defined_typename("vector<PadeHeader>"),-1,4,"_padeHeader=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TBEvent */
static void G__setup_memvarTBEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TBEventDictLN_TBEvent));
   { TBEvent *p; p=(TBEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TBEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TBEventDictLN_vectorlEPadeChannelcOallocatorlEPadeChannelgRsPgR),G__defined_typename("vector<PadeChannel>"),-1,4,"padeChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TBEventDictLN_vectorlEWCChannelcOallocatorlEWCChannelgRsPgR),G__defined_typename("vector<WCChannel>"),-1,4,"wc=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTBEventDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncPadeChannel(void) {
   /* PadeChannel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TBEventDictLN_PadeChannel));
   G__memfunc_setup("Class",502,G__TBEventDict_460_0_1, 85, G__get_linked_tagnum(&G__TBEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PadeChannel::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TBEventDict_460_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PadeChannel::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TBEventDict_460_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PadeChannel::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TBEventDict_460_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PadeChannel::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TBEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TBEventDict_460_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TBEventDict_460_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PadeChannel::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TBEventDict_460_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PadeChannel::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TBEventDict_460_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PadeChannel::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TBEventDict_460_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PadeChannel::DeclFileLine) ), 0);
   G__memfunc_setup("Fill",391,G__TBEventDict_460_0_13, 121, -1, -1, 0, 7, 1, 1, 0, 
"m - 'ULong64_t' 0 - ts r - 'UShort_t' 0 - transfer_size "
"r - 'UShort_t' 0 - board_id h - 'UInt_t' 0 - hw_counter "
"h - 'UInt_t' 0 - ch_number h - 'UInt_t' 0 - eventnum "
"I - 'Int_t' 0 - wform", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__TBEventDict_460_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dump",406,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetBoardID",917,G__TBEventDict_460_0_16, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelNum",1289,G__TBEventDict_460_0_17, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChannelID",1126,G__TBEventDict_460_0_18, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWform",811,G__TBEventDict_460_0_19, 82, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMax",582,G__TBEventDict_460_0_20, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPeak",673,G__TBEventDict_460_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("__SAMPLES",723,G__TBEventDict_460_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXYZ",555,G__TBEventDict_460_0_23, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - - 1 - x f - - 1 - y "
"f - - 1 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedistal",1110,G__TBEventDict_460_0_24, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", "*** place holder ***", (void*) NULL, 0);
   G__memfunc_setup("GetHist",696,G__TBEventDict_460_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1F' - 0 - h", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("PadeChannel", 1075, G__TBEventDict_460_0_26, (int) ('i'), G__get_linked_tagnum(&G__TBEventDictLN_PadeChannel), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("PadeChannel", 1075, G__TBEventDict_460_0_27, (int) ('i'), G__get_linked_tagnum(&G__TBEventDictLN_PadeChannel), -1, 0, 1, 1, 1, 0, "u 'PadeChannel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PadeChannel", 1201, G__TBEventDict_460_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TBEventDict_460_0_29, (int) ('u'), G__get_linked_tagnum(&G__TBEventDictLN_PadeChannel), -1, 1, 1, 1, 1, 0, "u 'PadeChannel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPadeHeader(void) {
   /* PadeHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TBEventDictLN_PadeHeader));
   G__memfunc_setup("Class",502,G__TBEventDict_461_0_1, 85, G__get_linked_tagnum(&G__TBEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PadeHeader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TBEventDict_461_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PadeHeader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TBEventDict_461_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PadeHeader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TBEventDict_461_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PadeHeader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TBEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TBEventDict_461_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TBEventDict_461_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PadeHeader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TBEventDict_461_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PadeHeader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TBEventDict_461_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PadeHeader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TBEventDict_461_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PadeHeader::DeclFileLine) ), 0);
   G__memfunc_setup("PadeHeader",963,G__TBEventDict_461_0_13, 105, G__get_linked_tagnum(&G__TBEventDictLN_PadeHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PadeHeader",963,G__TBEventDict_461_0_14, 105, G__get_linked_tagnum(&G__TBEventDictLN_PadeHeader), -1, 0, 9, 1, 1, 0, 
"g - 'Bool_t' 0 - master r - 'UShort_t' 0 - board "
"r - 'UShort_t' 0 - stat r - 'UShort_t' 0 - tstat "
"r - 'UShort_t' 0 - events r - 'UShort_t' 0 - mreg "
"r - 'UShort_t' 0 - pTrg r - 'UShort_t' 0 - pTmp "
"r - 'UShort_t' 0 - sTmp", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("PadeHeader", 963, G__TBEventDict_461_0_15, (int) ('i'), G__get_linked_tagnum(&G__TBEventDictLN_PadeHeader), -1, 0, 1, 1, 1, 0, "u 'PadeHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PadeHeader", 1089, G__TBEventDict_461_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TBEventDict_461_0_17, (int) ('u'), G__get_linked_tagnum(&G__TBEventDictLN_PadeHeader), -1, 1, 1, 1, 1, 0, "u 'PadeHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncWCChannel(void) {
   /* WCChannel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TBEventDictLN_WCChannel));
   G__memfunc_setup("Class",502,G__TBEventDict_462_0_1, 85, G__get_linked_tagnum(&G__TBEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&WCChannel::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TBEventDict_462_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCChannel::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TBEventDict_462_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&WCChannel::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TBEventDict_462_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&WCChannel::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TBEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TBEventDict_462_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TBEventDict_462_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCChannel::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TBEventDict_462_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCChannel::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TBEventDict_462_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&WCChannel::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TBEventDict_462_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&WCChannel::DeclFileLine) ), 0);
   G__memfunc_setup("WCChannel",851,G__TBEventDict_462_0_13, 105, G__get_linked_tagnum(&G__TBEventDictLN_WCChannel), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WCChannel",851,G__TBEventDict_462_0_14, 105, G__get_linked_tagnum(&G__TBEventDictLN_WCChannel), -1, 0, 3, 1, 1, 0, 
"b - 'UChar_t' 0 - num b - 'UChar_t' 0 - wire "
"r - 'UShort_t' 0 - count", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dump",406,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTDCNum",811,G__TBEventDict_462_0_16, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWire",695,G__TBEventDict_462_0_17, 98, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCount",809,G__TBEventDict_462_0_18, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__TBEventDict_462_0_19, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY",377,G__TBEventDict_462_0_20, 102, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("WCChannel", 851, G__TBEventDict_462_0_21, (int) ('i'), G__get_linked_tagnum(&G__TBEventDictLN_WCChannel), -1, 0, 1, 1, 1, 0, "u 'WCChannel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WCChannel", 977, G__TBEventDict_462_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TBEventDict_462_0_23, (int) ('u'), G__get_linked_tagnum(&G__TBEventDictLN_WCChannel), -1, 1, 1, 1, 1, 0, "u 'WCChannel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTBSpill(void) {
   /* TBSpill */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TBEventDictLN_TBSpill));
   G__memfunc_setup("Class",502,G__TBEventDict_463_0_1, 85, G__get_linked_tagnum(&G__TBEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TBSpill::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TBEventDict_463_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TBSpill::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TBEventDict_463_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TBSpill::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TBEventDict_463_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TBSpill::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TBEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TBEventDict_463_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TBEventDict_463_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TBSpill::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TBEventDict_463_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TBSpill::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TBEventDict_463_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TBSpill::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TBEventDict_463_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TBSpill::DeclFileLine) ), 0);
   G__memfunc_setup("TBSpill",666,G__TBEventDict_463_0_13, 105, G__get_linked_tagnum(&G__TBEventDictLN_TBSpill), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 '0' spillNumber m - 'ULong64_t' 0 '0' pcTime "
"i - 'Int_t' 0 '0' nTrigWC m - 'ULong64_t' 0 '0' wcTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSpillNumber",1421,G__TBEventDict_463_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPCTime",834,G__TBEventDict_463_0_15, 109, -1, G__defined_typename("ULong64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetnTigWC",844,G__TBEventDict_463_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCTime",841,G__TBEventDict_463_0_17, 109, -1, G__defined_typename("ULong64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Dump",406,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__TBEventDict_463_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSpillData",1194,G__TBEventDict_463_0_20, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - spillNumber m - 'ULong64_t' 0 - pcTime "
"i - 'Int_t' 0 - nTrigWC m - 'ULong64_t' 0 - wcTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSpillNumber",1433,G__TBEventDict_463_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPCTime",846,G__TBEventDict_463_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "m - 'ULong64_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetnTrigWC",970,G__TBEventDict_463_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWCTime",853,G__TBEventDict_463_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "m - 'ULong64_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddPade",643,G__TBEventDict_463_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'PadeHeader' - 0 - pade", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TBSpill", 666, G__TBEventDict_463_0_26, (int) ('i'), G__get_linked_tagnum(&G__TBEventDictLN_TBSpill), -1, 0, 1, 1, 1, 0, "u 'TBSpill' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TBSpill", 792, G__TBEventDict_463_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TBEventDict_463_0_28, (int) ('u'), G__get_linked_tagnum(&G__TBEventDictLN_TBSpill), -1, 1, 1, 1, 1, 0, "u 'TBSpill' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTBEvent(void) {
   /* TBEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TBEventDictLN_TBEvent));
   G__memfunc_setup("Class",502,G__TBEventDict_468_0_1, 85, G__get_linked_tagnum(&G__TBEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TBEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TBEventDict_468_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TBEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TBEventDict_468_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TBEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TBEventDict_468_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TBEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TBEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TBEventDict_468_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TBEventDict_468_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TBEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TBEventDict_468_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TBEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TBEventDict_468_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TBEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TBEventDict_468_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TBEvent::DeclFileLine) ), 0);
   G__memfunc_setup("Reset",515,G__TBEventDict_468_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", "clear data", (void*) NULL, 0);
   G__memfunc_setup("NPadeChan",834,G__TBEventDict_468_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPadeChan",1044,G__TBEventDict_468_0_15, 117, G__get_linked_tagnum(&G__TBEventDictLN_PadeChannel), -1, 0, 1, 1, 1, 8, "i - - 10 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastPadeChan",1448,G__TBEventDict_468_0_16, 117, G__get_linked_tagnum(&G__TBEventDictLN_PadeChannel), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCChan",820,G__TBEventDict_468_0_17, 117, G__get_linked_tagnum(&G__TBEventDictLN_WCChannel), -1, 0, 1, 1, 1, 0, "i - - 10 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWCHits",850,G__TBEventDict_468_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWChitsX",970,G__TBEventDict_468_0_19, 117, G__get_linked_tagnum(&G__TBEventDictLN_vectorlEWCChannelcOallocatorlEWCChannelgRsPgR), G__defined_typename("vector<WCChannel>"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - wc I - 'Int_t' 0 '0' min "
"I - 'Int_t' 0 '0' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWChitsY",971,G__TBEventDict_468_0_20, 117, G__get_linked_tagnum(&G__TBEventDictLN_vectorlEWCChannelcOallocatorlEWCChannelgRsPgR), G__defined_typename("vector<WCChannel>"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - wc I - 'Int_t' 0 '0' min "
"I - 'Int_t' 0 '0' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPadeChannel",1375,G__TBEventDict_468_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'PadeChannel' - 10 - p i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillPadeChannel",1466,G__TBEventDict_468_0_22, 121, -1, -1, 0, 7, 1, 1, 0, 
"m - 'ULong64_t' 0 - ts r - 'UShort_t' 0 - transfer_size "
"r - 'UShort_t' 0 - board_id h - 'UInt_t' 0 - hw_counter "
"h - 'UInt_t' 0 - ch_number h - 'UInt_t' 0 - eventnum "
"I - 'Int_t' 0 - wform", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddWCHit",712,G__TBEventDict_468_0_23, 121, -1, -1, 0, 3, 1, 1, 0, 
"b - 'UChar_t' 0 - num b - 'UChar_t' 0 - wire "
"r - 'UShort_t' 0 - count", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("TBEvent", 664, G__TBEventDict_468_0_24, (int) ('i'), G__get_linked_tagnum(&G__TBEventDictLN_TBEvent), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TBEvent", 664, G__TBEventDict_468_0_25, (int) ('i'), G__get_linked_tagnum(&G__TBEventDictLN_TBEvent), -1, 0, 1, 1, 1, 0, "u 'TBEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TBEvent", 790, G__TBEventDict_468_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TBEventDict_468_0_27, (int) ('u'), G__get_linked_tagnum(&G__TBEventDictLN_TBEvent), -1, 1, 1, 1, 1, 0, "u 'TBEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTBEventDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTBEventDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTBEventDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TBEventDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_PadeChannel = { "PadeChannel" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_PadeHeader = { "PadeHeader" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_WCChannel = { "WCChannel" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_TBSpill = { "TBSpill" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_vectorlEPadeHeadercOallocatorlEPadeHeadergRsPgR = { "vector<PadeHeader,allocator<PadeHeader> >" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_reverse_iteratorlEvectorlEPadeHeadercOallocatorlEPadeHeadergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<PadeHeader,allocator<PadeHeader> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_TBEvent = { "TBEvent" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_vectorlEWCChannelcOallocatorlEWCChannelgRsPgR = { "vector<WCChannel,allocator<WCChannel> >" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_reverse_iteratorlEvectorlEWCChannelcOallocatorlEWCChannelgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<WCChannel,allocator<WCChannel> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_vectorlEPadeChannelcOallocatorlEPadeChannelgRsPgR = { "vector<PadeChannel,allocator<PadeChannel> >" , 99 , -1 };
G__linked_taginfo G__TBEventDictLN_reverse_iteratorlEvectorlEPadeChannelcOallocatorlEPadeChannelgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<PadeChannel,allocator<PadeChannel> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTBEventDict() {
  G__TBEventDictLN_TClass.tagnum = -1 ;
  G__TBEventDictLN_TBuffer.tagnum = -1 ;
  G__TBEventDictLN_TMemberInspector.tagnum = -1 ;
  G__TBEventDictLN_TObject.tagnum = -1 ;
  G__TBEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TBEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TBEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TBEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TBEventDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TBEventDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TBEventDictLN_TH1F.tagnum = -1 ;
  G__TBEventDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__TBEventDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__TBEventDictLN_PadeChannel.tagnum = -1 ;
  G__TBEventDictLN_PadeHeader.tagnum = -1 ;
  G__TBEventDictLN_WCChannel.tagnum = -1 ;
  G__TBEventDictLN_TBSpill.tagnum = -1 ;
  G__TBEventDictLN_vectorlEPadeHeadercOallocatorlEPadeHeadergRsPgR.tagnum = -1 ;
  G__TBEventDictLN_reverse_iteratorlEvectorlEPadeHeadercOallocatorlEPadeHeadergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TBEventDictLN_TBEvent.tagnum = -1 ;
  G__TBEventDictLN_vectorlEWCChannelcOallocatorlEWCChannelgRsPgR.tagnum = -1 ;
  G__TBEventDictLN_reverse_iteratorlEvectorlEWCChannelcOallocatorlEWCChannelgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TBEventDictLN_vectorlEPadeChannelcOallocatorlEPadeChannelgRsPgR.tagnum = -1 ;
  G__TBEventDictLN_reverse_iteratorlEvectorlEPadeChannelcOallocatorlEPadeChannelgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTBEventDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_TMatrixTBaselEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TBEventDictLN_PadeChannel),sizeof(PadeChannel),-1,290816,(char*)NULL,G__setup_memvarPadeChannel,G__setup_memfuncPadeChannel);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TBEventDictLN_PadeHeader),sizeof(PadeHeader),-1,323840,(char*)NULL,G__setup_memvarPadeHeader,G__setup_memfuncPadeHeader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TBEventDictLN_WCChannel),sizeof(WCChannel),-1,323840,(char*)NULL,G__setup_memvarWCChannel,G__setup_memfuncWCChannel);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TBEventDictLN_TBSpill),sizeof(TBSpill),-1,291072,"Spill header info",G__setup_memvarTBSpill,G__setup_memfuncTBSpill);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_vectorlEPadeHeadercOallocatorlEPadeHeadergRsPgR);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_reverse_iteratorlEvectorlEPadeHeadercOallocatorlEPadeHeadergRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TBEventDictLN_TBEvent),sizeof(TBEvent),-1,290816,"Event structure",G__setup_memvarTBEvent,G__setup_memfuncTBEvent);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_vectorlEWCChannelcOallocatorlEWCChannelgRsPgR);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_reverse_iteratorlEvectorlEWCChannelcOallocatorlEWCChannelgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_vectorlEPadeChannelcOallocatorlEPadeChannelgRsPgR);
   G__get_linked_tagnum_fwd(&G__TBEventDictLN_reverse_iteratorlEvectorlEPadeChannelcOallocatorlEPadeChannelgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupTBEventDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTBEventDict()");
  G__set_cpp_environmentTBEventDict();
  G__cpp_setup_tagtableTBEventDict();

  G__cpp_setup_inheritanceTBEventDict();

  G__cpp_setup_typetableTBEventDict();

  G__cpp_setup_memvarTBEventDict();

  G__cpp_setup_memfuncTBEventDict();
  G__cpp_setup_globalTBEventDict();
  G__cpp_setup_funcTBEventDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTBEventDict();
  return;
}
class G__cpp_setup_initTBEventDict {
  public:
    G__cpp_setup_initTBEventDict() { G__add_setup_func("TBEventDict",(G__incsetup)(&G__cpp_setupTBEventDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTBEventDict() { G__remove_setup_func("TBEventDict"); }
};
G__cpp_setup_initTBEventDict G__cpp_setup_initializerTBEventDict;

