//
// File generated by rootcint at Wed May 21 09:37:53 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME waveEventDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "waveEventDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void waveInterface_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_waveInterface(void *p = 0);
   static void *newArray_waveInterface(Long_t size, void *p);
   static void delete_waveInterface(void *p);
   static void deleteArray_waveInterface(void *p);
   static void destruct_waveInterface(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::waveInterface*)
   {
      ::waveInterface *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::waveInterface >(0);
      static ::ROOT::TGenericClassInfo 
         instance("waveInterface", ::waveInterface::Class_Version(), "./include/waveInterface.h", 38,
                  typeid(::waveInterface), DefineBehavior(ptr, ptr),
                  &::waveInterface::Dictionary, isa_proxy, 4,
                  sizeof(::waveInterface) );
      instance.SetNew(&new_waveInterface);
      instance.SetNewArray(&newArray_waveInterface);
      instance.SetDelete(&delete_waveInterface);
      instance.SetDeleteArray(&deleteArray_waveInterface);
      instance.SetDestructor(&destruct_waveInterface);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::waveInterface*)
   {
      return GenerateInitInstanceLocal((::waveInterface*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::waveInterface*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *waveInterface::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *waveInterface::Class_Name()
{
   return "waveInterface";
}

//______________________________________________________________________________
const char *waveInterface::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::waveInterface*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int waveInterface::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::waveInterface*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void waveInterface::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::waveInterface*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *waveInterface::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::waveInterface*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void waveInterface::Streamer(TBuffer &R__b)
{
   // Stream an object of class waveInterface.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(waveInterface::Class(),this);
   } else {
      R__b.WriteClassBuffer(waveInterface::Class(),this);
   }
}

//______________________________________________________________________________
void waveInterface::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class waveInterface.
      TClass *R__cl = ::waveInterface::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQObject", &fQObject);
      R__insp.InspectMember(fQObject, "fQObject.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_filename", &_filename);
      R__insp.InspectMember(_filename, "_filename.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_FMain", &_FMain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_buttonFrame", &_buttonFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_boardAndchannelFrame", &_boardAndchannelFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_actionFrame", &_actionFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_spectrumFrame", &_spectrumFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_channelFrame", &_channelFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_histogramFrame", &_histogramFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_addFrame", &_addFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_boardFrame", &_boardFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_waveformCanvas", &_waveformCanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_histoCanvas", &_histoCanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_event", &_event);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_eventTree", &_eventTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_bevent", &_bevent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_waveform", &_waveform);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_pulseHeight", &_pulseHeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_timer", &_timer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_delay", &_delay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_width", &_width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_height", &_height);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_currentEntry", &_currentEntry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_currentChannel", &_currentChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_currentBoard", &_currentBoard);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_minCount", &_minCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_playerStatus", &_playerStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_updateHistogramBN", &_updateHistogramBN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_loadBN", &_loadBN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_goBN", &_goBN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_stopBN", &_stopBN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_nextenBN", &_nextenBN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_prevenBN", &_prevenBN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_nextchBN", &_nextchBN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_prevchBN", &_prevchBN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_firstchBN", &_firstchBN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_addHistogramBN", &_addHistogramBN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_chList", &_chList);
      R__insp.InspectMember(_chList, "_chList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_boardList", &_boardList);
      R__insp.InspectMember(_boardList, "_boardList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_chSet", (void*)&_chSet);
      R__insp.InspectMember("set<Int_t>", (void*)&_chSet, "_chSet.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_chiterator", (void*)&_chiterator);
      R__insp.InspectMember("set<int,less<int>,allocator<int> >::iterator", (void*)&_chiterator, "_chiterator.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_delayBox", &_delayBox);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_minADC", &_minADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_adcLabel", &_adcLabel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_f", &_f);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_padeChannel", &_padeChannel);
      R__insp.InspectMember(_padeChannel, "_padeChannel.");
      TQObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_waveInterface(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::waveInterface : new ::waveInterface;
   }
   static void *newArray_waveInterface(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::waveInterface[nElements] : new ::waveInterface[nElements];
   }
   // Wrapper around operator delete
   static void delete_waveInterface(void *p) {
      delete ((::waveInterface*)p);
   }
   static void deleteArray_waveInterface(void *p) {
      delete [] ((::waveInterface*)p);
   }
   static void destruct_waveInterface(void *p) {
      typedef ::waveInterface current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::waveInterface

namespace ROOT {
   void setlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void setlEintgR_Dictionary();
   static void *new_setlEintgR(void *p = 0);
   static void *newArray_setlEintgR(Long_t size, void *p);
   static void delete_setlEintgR(void *p);
   static void deleteArray_setlEintgR(void *p);
   static void destruct_setlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const set<int>*)
   {
      set<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(set<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("set<int>", -2, "set.dll", 0,
                  typeid(set<int>), DefineBehavior(ptr, ptr),
                  0, &setlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(set<int>) );
      instance.SetNew(&new_setlEintgR);
      instance.SetNewArray(&newArray_setlEintgR);
      instance.SetDelete(&delete_setlEintgR);
      instance.SetDeleteArray(&deleteArray_setlEintgR);
      instance.SetDestructor(&destruct_setlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Insert< set<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const set<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void setlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const set<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_setlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) set<int> : new set<int>;
   }
   static void *newArray_setlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) set<int>[nElements] : new set<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_setlEintgR(void *p) {
      delete ((set<int>*)p);
   }
   static void deleteArray_setlEintgR(void *p) {
      delete [] ((set<int>*)p);
   }
   static void destruct_setlEintgR(void *p) {
      typedef set<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class set<int>

/********************************************************
* waveEventDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablewaveEventDict();

extern "C" void G__set_cpp_environmentwaveEventDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/waveInterface.h");
  G__cpp_reset_tagtablewaveEventDict();
}
#include <new>
extern "C" int G__cpp_dllrevwaveEventDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* waveInterface */
static int G__waveEventDict_864_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const waveInterface*) G__getstructoffset())->GetListOfSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((waveInterface*) G__getstructoffset())->Connect((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((waveInterface*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((waveInterface*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0]), (void*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((waveInterface*) G__getstructoffset())->Disconnect((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((waveInterface*) G__getstructoffset())->Disconnect());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   const int imax = 6, dmax = 8, umax = 50;
   int objsize, type, i, icnt = 0, dcnt = 0, ucnt = 0;
   G__value *pval;
   G__int64 lval[imax] = {0};
   double dval[dmax] = {0};
   union { G__int64 lval; double dval; } u[umax] = {{0}};
   lval[icnt] = G__getstructoffset(); icnt++; // this pointer
   for (i = 0; i < libp->paran; i++) {
      type = G__value_get_type(&libp->para[i]);
      pval = &libp->para[i];
      if (isupper(type))
         objsize = G__LONGALLOC;
      else
         objsize = G__sizeof(pval);
      switch (type) {
         case 'c': case 'b': case 's': case 'r': objsize = sizeof(int); break;
         case 'f': objsize = sizeof(double); break;
      }
#ifdef G__VAARG_PASS_BY_REFERENCE
      if (objsize > G__VAARG_PASS_BY_REFERENCE) {
         if (pval->ref > 0x1000) {
            if (icnt < imax) {
               lval[icnt] = pval->ref; icnt++;
            } else {
               u[ucnt].lval = pval->ref; ucnt++;
            }
         } else {
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            }
         }
         type = 'z';
      }
#endif
      switch (type) {
         case 'n': case 'm':
            if (icnt < imax) {
               lval[icnt] = (G__int64)G__Longlong(*pval); icnt++;
            } else {
               u[ucnt].lval = (G__int64)G__Longlong(*pval); ucnt++;
            } break;
         case 'f': case 'd':
            if (dcnt < dmax) {
               dval[dcnt] = G__double(*pval); dcnt++;
            } else {
               u[ucnt].dval = G__double(*pval); ucnt++;
            } break;
         case 'z': break;
         case 'u':
            if (objsize >= 16) {
               memcpy(&u[ucnt].lval, (void*)pval->obj.i, objsize);
               ucnt += objsize/8;
               break;
            }
            // objsize < 16 -> fall through
         case 'g': case 'c': case 'b': case 'r': case 's': case 'h': case 'i':
         case 'k': case 'l':
         default:
            if (icnt < imax) {
               lval[icnt] = G__int(*pval); icnt++;
            } else {
               u[ucnt].lval = G__int(*pval); ucnt++;
            } break;
      }
      if (ucnt >= 50) printf("EmitVA: more than 56 var args\n");
   }
      ((waveInterface*) G__getstructoffset())->EmitVA((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]), dval[0], dval[1], dval[2], dval[3], dval[4], dval[5], dval[6], dval[7], lval[3], lval[4], lval[5], u[0].lval, u[1].lval, u[2].lval, u[3].lval, u[4].lval, u[5].lval, u[6].lval, u[7].lval, u[8].lval, u[9].lval, u[10].lval, u[11].lval, u[12].lval, u[13].lval, u[14].lval, u[15].lval, u[16].lval, u[17].lval, u[18].lval, u[19].lval, u[20].lval, u[21].lval, u[22].lval, u[23].lval, u[24].lval, u[25].lval, u[26].lval, u[27].lval, u[28].lval, u[29].lval, u[30].lval, u[31].lval, u[32].lval, u[33].lval, u[34].lval, u[35].lval, u[36].lval, u[37].lval, u[38].lval, u[39].lval, u[40].lval, u[41].lval, u[42].lval, u[43].lval, u[44].lval, u[45].lval, u[46].lval, u[47].lval, u[48].lval, u[49].lval);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Long64_t) G__Longlong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong64_t) G__ULonglong(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UChar_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (ULong_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Emit((const char*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) waveInterface::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) waveInterface::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) waveInterface::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      waveInterface::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) waveInterface::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) waveInterface::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) waveInterface::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) waveInterface::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   waveInterface* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new waveInterface(*(TString*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) waveInterface(*(TString*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new waveInterface(*(TString*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) waveInterface(*(TString*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__waveEventDictLN_waveInterface));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   waveInterface* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new waveInterface((bool) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) waveInterface((bool) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new waveInterface[n];
       } else {
         p = new((void*) gvp) waveInterface[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new waveInterface;
       } else {
         p = new((void*) gvp) waveInterface;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__waveEventDictLN_waveInterface));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->openFileDialog();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->closeCleanup();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Go();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->Stop();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((waveInterface*) G__getstructoffset())->PlayerStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((waveInterface*) G__getstructoffset())->Delay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((waveInterface*) G__getstructoffset())->nextOverthresholdCh((bool) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->minADCUpdate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->waveformChUpdate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((waveInterface*) G__getstructoffset())->nextChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->prevChannel();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((waveInterface*) G__getstructoffset())->nextEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->prevEntry();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->firstChannel();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->updateBoardSelection((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->updateChannelSelection();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->addHistogramPane();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->updateHistogram();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->enableChannelColumn((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->setDelay((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->delayBoxUpdate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((waveInterface*) G__getstructoffset())->initWindow((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((waveInterface*) G__getstructoffset())->initWindow((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((waveInterface*) G__getstructoffset())->initWindow();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->makeButtons();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->addFixedCheckBoxes();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->connectButtons();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__waveEventDict_864_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((waveInterface*) G__getstructoffset())->updateFrame((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef waveInterface G__TwaveInterface;
static int G__waveEventDict_864_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (waveInterface*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((waveInterface*) (soff+(sizeof(waveInterface)*i)))->~G__TwaveInterface();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (waveInterface*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((waveInterface*) (soff))->~G__TwaveInterface();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* waveInterface */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncwaveEventDict {
 public:
  G__Sizep2memfuncwaveEventDict(): p(&G__Sizep2memfuncwaveEventDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncwaveEventDict::*p)();
};

size_t G__get_sizep2memfuncwaveEventDict()
{
  G__Sizep2memfuncwaveEventDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancewaveEventDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__waveEventDictLN_waveInterface))) {
     waveInterface *G__Lderived;
     G__Lderived=(waveInterface*)0x1000;
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__waveEventDictLN_waveInterface),G__get_linked_tagnum(&G__waveEventDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablewaveEventDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("ULong_t",107,-1,0,-1);
   G__setnewtype(-1,"Unsigned long integer 8 bytes (unsigned long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("ULong64_t",109,-1,0,-1);
   G__setnewtype(-1,"Portable unsigned long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__waveEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__waveEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__waveEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__waveEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__waveEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__waveEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__waveEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__waveEventDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__waveEventDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__waveEventDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__waveEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__waveEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__waveEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__waveEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__waveEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__waveEventDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__waveEventDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__waveEventDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__waveEventDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__waveEventDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__waveEventDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__waveEventDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__waveEventDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__waveEventDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__waveEventDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__waveEventDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__waveEventDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__waveEventDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PadeHeader>",117,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEPadeHeadercOallocatorlEPadeHeadergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__waveEventDictLN_reverse_iteratorlEvectorlEPadeHeadercOallocatorlEPadeHeadergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEPadeHeadercOallocatorlEPadeHeadergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__waveEventDictLN_reverse_iteratorlEvectorlEPadeHeadercOallocatorlEPadeHeadergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEPadeHeadercOallocatorlEPadeHeadergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<WCChannel>",117,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEWCChannelcOallocatorlEWCChannelgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__waveEventDictLN_reverse_iteratorlEvectorlEWCChannelcOallocatorlEWCChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEWCChannelcOallocatorlEWCChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__waveEventDictLN_reverse_iteratorlEvectorlEWCChannelcOallocatorlEWCChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEWCChannelcOallocatorlEWCChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PadeChannel>",117,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEPadeChannelcOallocatorlEPadeChannelgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__waveEventDictLN_reverse_iteratorlEvectorlEPadeChannelcOallocatorlEPadeChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEPadeChannelcOallocatorlEPadeChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__waveEventDictLN_reverse_iteratorlEvectorlEPadeChannelcOallocatorlEPadeChannelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__waveEventDictLN_vectorlEPadeChannelcOallocatorlEPadeChannelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<Int_t>",117,G__get_linked_tagnum(&G__waveEventDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* waveInterface */
static void G__setup_memvarwaveInterface(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__waveEventDictLN_waveInterface));
   { waveInterface *p; p=(waveInterface*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TQObjSender),-1,-1,4,"fQObject=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TString),-1,-1,4,"_filename=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGMainFrame),-1,-1,4,"_FMain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGVerticalFrame),-1,-1,4,"_buttonFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGHorizontalFrame),-1,-1,4,"_boardAndchannelFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGHorizontalFrame),-1,-1,4,"_actionFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGVerticalFrame),-1,-1,4,"_spectrumFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGCompositeFrame),-1,-1,4,"_channelFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGVerticalFrame),-1,-1,4,"_histogramFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGHorizontalFrame),-1,-1,4,"_addFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGGroupFrame),-1,-1,4,"_boardFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TRootEmbeddedCanvas),-1,-1,4,"_waveformCanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TRootEmbeddedCanvas),-1,-1,4,"_histoCanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TBEvent),-1,-1,4,"_event=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TTree),-1,-1,4,"_eventTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TBranch),-1,-1,4,"_bevent=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TH1F),-1,-1,4,"_waveform=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TH1F),-1,-1,4,"_pulseHeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TThread),-1,-1,4,"_timer=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_delay=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_width=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_height=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"_currentEntry=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_currentChannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_currentBoard=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"_minCount=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"_playerStatus=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGTextButton),-1,-1,4,"_updateHistogramBN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGTextButton),-1,-1,4,"_loadBN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGTextButton),-1,-1,4,"_goBN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGTextButton),-1,-1,4,"_stopBN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGTextButton),-1,-1,4,"_nextenBN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGTextButton),-1,-1,4,"_prevenBN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGTextButton),-1,-1,4,"_nextchBN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGTextButton),-1,-1,4,"_prevchBN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGTextButton),-1,-1,4,"_firstchBN=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGCheckButton),-1,-1,4,"_addHistogramBN=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TObjArray),-1,-1,4,"_chList=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TObjArray),-1,-1,4,"_boardList=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__waveEventDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),G__defined_typename("set<Int_t>"),-1,4,"_chSet=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__waveEventDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgRcLcLiterator),-1,-1,4,"_chiterator=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGNumberEntry),-1,-1,4,"_delayBox=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGNumberEntry),-1,-1,4,"_minADC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TGLabel),-1,-1,4,"_adcLabel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__waveEventDictLN_TFile),-1,-1,4,"_f=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__waveEventDictLN_PadeChannel),-1,-1,4,"_padeChannel=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarwaveEventDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncwaveInterface(void) {
   /* waveInterface */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__waveEventDictLN_waveInterface));
   G__memfunc_setup("GetListOfSignals",1602,G__waveEventDict_864_0_1, 85, G__get_linked_tagnum(&G__waveEventDictLN_TList), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,G__waveEventDict_864_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - - 10 - sig C - - 10 - cl "
"Y - - 0 - rcvr C - - 10 - slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Disconnect",1034,G__waveEventDict_864_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' sig Y - - 0 '0' rcvr "
"C - - 10 '0' slt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HighPriority",1250,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LowPriority",1172,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal_name C - - 10 '0' slot_name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EmitVA",550,G__waveEventDict_864_0_6, 121, -1, -1, 0, 2, 8, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - nargs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__waveEventDict_864_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - signal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__waveEventDict_864_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal C - - 10 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__waveEventDict_864_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal L - 'Long_t' 0 - paramArr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__waveEventDict_864_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal d - 'Double_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__waveEventDict_864_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal l - 'Long_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__waveEventDict_864_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal n - 'Long64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__waveEventDict_864_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal m - 'ULong64_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__waveEventDict_864_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal g - 'Bool_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__waveEventDict_864_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal c - 'Char_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__waveEventDict_864_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal b - 'UChar_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__waveEventDict_864_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal s - 'Short_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__waveEventDict_864_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal r - 'UShort_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__waveEventDict_864_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal i - 'Int_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__waveEventDict_864_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal h - 'UInt_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__waveEventDict_864_0_21, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal k - 'ULong_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Emit",399,G__waveEventDict_864_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - signal f - 'Float_t' 0 - param", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Destroyed",947,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChangedBy",869,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - method", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Message",709,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - msg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__waveEventDict_864_0_26, 85, G__get_linked_tagnum(&G__waveEventDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&waveInterface::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__waveEventDict_864_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&waveInterface::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__waveEventDict_864_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&waveInterface::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__waveEventDict_864_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&waveInterface::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__waveEventDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__waveEventDict_864_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__waveEventDict_864_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&waveInterface::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__waveEventDict_864_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&waveInterface::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__waveEventDict_864_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&waveInterface::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__waveEventDict_864_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&waveInterface::DeclFileLine) ), 0);
   G__memfunc_setup("loadRootFile",1220,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("waveInterface",1348,G__waveEventDict_864_0_39, 105, G__get_linked_tagnum(&G__waveEventDictLN_waveInterface), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 11 - filename g - - 0 'true' initialise", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("waveInterface",1348,G__waveEventDict_864_0_40, 105, G__get_linked_tagnum(&G__waveEventDictLN_waveInterface), -1, 0, 1, 1, 1, 0, "g - - 0 'true' initialise", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openFileDialog",1410,G__waveEventDict_864_0_41, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeCleanup",1246,G__waveEventDict_864_0_42, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Go",182,G__waveEventDict_864_0_43, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Stop",422,G__waveEventDict_864_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlayerStatus",1265,G__waveEventDict_864_0_45, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Delay",495,G__waveEventDict_864_0_46, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextOverthresholdCh",2003,G__waveEventDict_864_0_47, 103, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - up", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("minADCUpdate",1135,G__waveEventDict_864_0_48, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("waveformChUpdate",1653,G__waveEventDict_864_0_49, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextChannel",1144,G__waveEventDict_864_0_50, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("prevChannel",1142,G__waveEventDict_864_0_51, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextEntry",977,G__waveEventDict_864_0_52, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("prevEntry",975,G__waveEventDict_864_0_53, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("firstChannel",1249,G__waveEventDict_864_0_54, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("updateBoardSelection",2065,G__waveEventDict_864_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - brd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("updateChannelSelection",2274,G__waveEventDict_864_0_56, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addHistogramPane",1627,G__waveEventDict_864_0_57, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("updateHistogram",1585,G__waveEventDict_864_0_58, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("enableChannelColumn",1934,G__waveEventDict_864_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDelay",827,G__waveEventDict_864_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - delay", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("delayBoxUpdate",1435,G__waveEventDict_864_0_61, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initWindow",1068,G__waveEventDict_864_0_62, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 '0' width h - 'UInt_t' 0 '0' height", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeButtons",1165,G__waveEventDict_864_0_63, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addFixedCheckBoxes",1784,G__waveEventDict_864_0_64, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("connectButtons",1497,G__waveEventDict_864_0_65, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__waveEventDict_864_0_66, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("updateFrame",1134,G__waveEventDict_864_0_67, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - entry h - 'UInt_t' 0 - channel", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~waveInterface", 1474, G__waveEventDict_864_0_68, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncwaveEventDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {
}

static void G__cpp_setup_global9() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalwaveEventDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
  G__cpp_setup_global9();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcwaveEventDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__waveEventDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TQObjSender = { "TQObjSender" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__waveEventDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__waveEventDictLN_TGTextButton = { "TGTextButton" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TGVerticalFrame = { "TGVerticalFrame" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TGHorizontalFrame = { "TGHorizontalFrame" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TGGroupFrame = { "TGGroupFrame" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TRootEmbeddedCanvas = { "TRootEmbeddedCanvas" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TGCheckButton = { "TGCheckButton" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TGNumberEntry = { "TGNumberEntry" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TGLabel = { "TGLabel" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TThread = { "TThread" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_PadeChannel = { "PadeChannel" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_vectorlEPadeHeadercOallocatorlEPadeHeadergRsPgR = { "vector<PadeHeader,allocator<PadeHeader> >" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_reverse_iteratorlEvectorlEPadeHeadercOallocatorlEPadeHeadergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<PadeHeader,allocator<PadeHeader> >::iterator>" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_TBEvent = { "TBEvent" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_vectorlEWCChannelcOallocatorlEWCChannelgRsPgR = { "vector<WCChannel,allocator<WCChannel> >" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_reverse_iteratorlEvectorlEWCChannelcOallocatorlEWCChannelgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<WCChannel,allocator<WCChannel> >::iterator>" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_vectorlEPadeChannelcOallocatorlEPadeChannelgRsPgR = { "vector<PadeChannel,allocator<PadeChannel> >" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_reverse_iteratorlEvectorlEPadeChannelcOallocatorlEPadeChannelgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<PadeChannel,allocator<PadeChannel> >::iterator>" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR = { "set<int,less<int>,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgRcLcLiterator = { "set<int,less<int>,allocator<int> >::iterator" , 99 , -1 };
G__linked_taginfo G__waveEventDictLN_waveInterface = { "waveInterface" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablewaveEventDict() {
  G__waveEventDictLN_TClass.tagnum = -1 ;
  G__waveEventDictLN_TBuffer.tagnum = -1 ;
  G__waveEventDictLN_TMemberInspector.tagnum = -1 ;
  G__waveEventDictLN_TString.tagnum = -1 ;
  G__waveEventDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__waveEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__waveEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__waveEventDictLN_TList.tagnum = -1 ;
  G__waveEventDictLN_TObjArray.tagnum = -1 ;
  G__waveEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__waveEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__waveEventDictLN_TQObject.tagnum = -1 ;
  G__waveEventDictLN_TQObjSender.tagnum = -1 ;
  G__waveEventDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__waveEventDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__waveEventDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__waveEventDictLN_TGCompositeFrame.tagnum = -1 ;
  G__waveEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__waveEventDictLN_TGTextButton.tagnum = -1 ;
  G__waveEventDictLN_TGVerticalFrame.tagnum = -1 ;
  G__waveEventDictLN_TGHorizontalFrame.tagnum = -1 ;
  G__waveEventDictLN_TGMainFrame.tagnum = -1 ;
  G__waveEventDictLN_TGGroupFrame.tagnum = -1 ;
  G__waveEventDictLN_TRootEmbeddedCanvas.tagnum = -1 ;
  G__waveEventDictLN_TGCheckButton.tagnum = -1 ;
  G__waveEventDictLN_TGNumberEntry.tagnum = -1 ;
  G__waveEventDictLN_TGLabel.tagnum = -1 ;
  G__waveEventDictLN_TH1F.tagnum = -1 ;
  G__waveEventDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__waveEventDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__waveEventDictLN_TFile.tagnum = -1 ;
  G__waveEventDictLN_TTree.tagnum = -1 ;
  G__waveEventDictLN_TBranch.tagnum = -1 ;
  G__waveEventDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__waveEventDictLN_TThread.tagnum = -1 ;
  G__waveEventDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__waveEventDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__waveEventDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__waveEventDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__waveEventDictLN_PadeChannel.tagnum = -1 ;
  G__waveEventDictLN_vectorlEPadeHeadercOallocatorlEPadeHeadergRsPgR.tagnum = -1 ;
  G__waveEventDictLN_reverse_iteratorlEvectorlEPadeHeadercOallocatorlEPadeHeadergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__waveEventDictLN_TBEvent.tagnum = -1 ;
  G__waveEventDictLN_vectorlEWCChannelcOallocatorlEWCChannelgRsPgR.tagnum = -1 ;
  G__waveEventDictLN_reverse_iteratorlEvectorlEWCChannelcOallocatorlEWCChannelgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__waveEventDictLN_vectorlEPadeChannelcOallocatorlEPadeChannelgRsPgR.tagnum = -1 ;
  G__waveEventDictLN_reverse_iteratorlEvectorlEPadeChannelcOallocatorlEPadeChannelgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__waveEventDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__waveEventDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgRcLcLiterator.tagnum = -1 ;
  G__waveEventDictLN_waveInterface.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablewaveEventDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TString);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TList);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TQObject);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TQObjSender);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TGTextButton);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TGVerticalFrame);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TGHorizontalFrame);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TGGroupFrame);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TRootEmbeddedCanvas);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TGCheckButton);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TGNumberEntry);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TGLabel);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TThread);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_PadeChannel);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_vectorlEPadeHeadercOallocatorlEPadeHeadergRsPgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_reverse_iteratorlEvectorlEPadeHeadercOallocatorlEPadeHeadergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_TBEvent);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_vectorlEWCChannelcOallocatorlEWCChannelgRsPgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_reverse_iteratorlEvectorlEWCChannelcOallocatorlEWCChannelgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_vectorlEPadeChannelcOallocatorlEPadeChannelgRsPgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_reverse_iteratorlEvectorlEPadeChannelcOallocatorlEPadeChannelgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__waveEventDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__waveEventDictLN_waveInterface),sizeof(waveInterface),-1,296192,(char*)NULL,G__setup_memvarwaveInterface,G__setup_memfuncwaveInterface);
}
extern "C" void G__cpp_setupwaveEventDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupwaveEventDict()");
  G__set_cpp_environmentwaveEventDict();
  G__cpp_setup_tagtablewaveEventDict();

  G__cpp_setup_inheritancewaveEventDict();

  G__cpp_setup_typetablewaveEventDict();

  G__cpp_setup_memvarwaveEventDict();

  G__cpp_setup_memfuncwaveEventDict();
  G__cpp_setup_globalwaveEventDict();
  G__cpp_setup_funcwaveEventDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncwaveEventDict();
  return;
}
class G__cpp_setup_initwaveEventDict {
  public:
    G__cpp_setup_initwaveEventDict() { G__add_setup_func("waveEventDict",(G__incsetup)(&G__cpp_setupwaveEventDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initwaveEventDict() { G__remove_setup_func("waveEventDict"); }
};
G__cpp_setup_initwaveEventDict G__cpp_setup_initializerwaveEventDict;

